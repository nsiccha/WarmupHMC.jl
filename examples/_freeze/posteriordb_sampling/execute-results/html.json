{
  "hash": "01c14c26fe3344a70516cbc65b8ffea6",
  "result": {
    "markdown": "---\ntitle: Using posteriordb posteriors\nexecute:\n  daemon: 999999\n---\n\n::: {.cell execution_count=1}\n``` {.julia .cell-code}\nincludet(\"common.jl\")\nusing AdvancedHMC\nRandom.seed!(1) \n```\n\n::: {.cell-output .cell-output-display execution_count=84}\n```\nTaskLocalRNG()\n```\n:::\n:::\n\n\n::: {.cell execution_count=2}\n``` {.julia .cell-code}\nfunction showcase(centeredness=ones(8), n_samples=20_000, n_adapts=1_000, initial_stepsize=1.)\n    res_posterior = ReparametrizedDistribution(\n        BSDistribution(\n            PDBPosterior(\"eight_schools-eight_schools_centered\").bridgestan_model,\n        ), \n        ContinuousNoncentering(centeredness), wrapper=EightSchoolsDraw\n    )\n    initial_parameters = zeros(res_posterior.no_dimensions)\n    metric = DiagEuclideanMetric(res_posterior.no_dimensions)\n    hamiltonian = Hamiltonian(metric, res_posterior, ReverseDiff)\n    integrator = Leapfrog(initial_stepsize)\n    proposal = NUTS{MultinomialTS, GeneralisedNoUTurn}(integrator)\n    adaptor = StanHMCAdaptor(MassMatrixAdaptor(metric), StepSizeAdaptor(0.8, integrator))\n    samples, stats = sample(hamiltonian, proposal, initial_parameters, n_samples, adaptor, n_adapts; progress=false)\n    EightSchoolsDraws(hcat(samples[1+n_adapts:end]...)')\nend\nshowcase(ones(8)).scatter_funnel \n```\n\n::: {.cell-output .cell-output-stderr}\n```\n┌ Warning: Loading a shared object '/home/niko/.julia/artifacts/95c3074bd791a2f28857088639b48ca1b786459a/posteriordb-0.4.0/posterior_database/models/stan/eight_schools_centered_model.so' which is already loaded.\n│ If the file has changed since the last time it was loaded, this load may not update the library!\n└ @ BridgeStan /home/niko/.julia/packages/BridgeStan/ajc6B/src/model.jl:50\n┌ Info: Finished 1000 adapation steps\n│   adaptor = StanHMCAdaptor(\n    pc=WelfordVar,\n    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.18205294603176367),\n    init_buffer=75, term_buffer=50, window_size=25,\n    state=window(76, 950), window_splits(100, 150, 250, 450, 950)\n)\n│   κ.τ.integrator = Leapfrog(ϵ=0.182)\n│   h.metric = DiagEuclideanMetric([29.74357500900673, 17.4825 ...])\n└ @ AdvancedHMC /home/niko/.julia/packages/AdvancedHMC/P0nla/src/sampler.jl:223\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n┌ Info: Finished 20000 sampling steps for 1 chains in 19.867921932 (s)\n│   h = Hamiltonian(metric=DiagEuclideanMetric([29.74357500900673, 17.4825 ...]), kinetic=GaussianKinetic())\n│   κ = HMCKernel{AdvancedHMC.FullMomentumRefreshment, Trajectory{MultinomialTS, Leapfrog{Float64}, GeneralisedNoUTurn{Float64}}}(AdvancedHMC.FullMomentumRefreshment(), Trajectory{MultinomialTS}(integrator=Leapfrog(ϵ=0.182), tc=GeneralisedNoUTurn{Float64}(10, 1000.0)))\n│   EBFMI_est = 0.23780181211892362\n│   average_acceptance_rate = 0.7891737575027511\n└ @ AdvancedHMC /home/niko/.julia/packages/AdvancedHMC/P0nla/src/sampler.jl:246\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](figs/14742517274925293420.png)\n\n:::\n\n::: {.cell-output .cell-output-display execution_count=85}\n```\n\n```\n:::\n:::\n\n\n::: {.cell execution_count=3}\n``` {.julia .cell-code}\nshowcase(zeros(8)).scatter_funnel \n```\n\n::: {.cell-output .cell-output-stderr}\n```\n┌ Warning: Loading a shared object '/home/niko/.julia/artifacts/95c3074bd791a2f28857088639b48ca1b786459a/posteriordb-0.4.0/posterior_database/models/stan/eight_schools_centered_model.so' which is already loaded.\n│ If the file has changed since the last time it was loaded, this load may not update the library!\n└ @ BridgeStan /home/niko/.julia/packages/BridgeStan/ajc6B/src/model.jl:50\n┌ Info: Finished 1000 adapation steps\n│   adaptor = StanHMCAdaptor(\n    pc=WelfordVar,\n    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.4629124693929041),\n    init_buffer=75, term_buffer=50, window_size=25,\n    state=window(76, 950), window_splits(100, 150, 250, 450, 950)\n)\n│   κ.τ.integrator = Leapfrog(ϵ=0.463)\n│   h.metric = DiagEuclideanMetric([0.9047161034441294, 0.7823 ...])\n└ @ AdvancedHMC /home/niko/.julia/packages/AdvancedHMC/P0nla/src/sampler.jl:223\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n┌ Info: Finished 20000 sampling steps for 1 chains in 8.377109936 (s)\n│   h = Hamiltonian(metric=DiagEuclideanMetric([0.9047161034441294, 0.7823 ...]), kinetic=GaussianKinetic())\n│   κ = HMCKernel{AdvancedHMC.FullMomentumRefreshment, Trajectory{MultinomialTS, Leapfrog{Float64}, GeneralisedNoUTurn{Float64}}}(AdvancedHMC.FullMomentumRefreshment(), Trajectory{MultinomialTS}(integrator=Leapfrog(ϵ=0.463), tc=GeneralisedNoUTurn{Float64}(10, 1000.0)))\n│   EBFMI_est = 0.9969619938816938\n│   average_acceptance_rate = 0.848637796106458\n└ @ AdvancedHMC /home/niko/.julia/packages/AdvancedHMC/P0nla/src/sampler.jl:246\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](figs/16249029506990191466.png)\n\n:::\n\n::: {.cell-output .cell-output-display execution_count=86}\n```\n\n```\n:::\n:::\n\n\n",
    "supporting": [
      "posteriordb_sampling_files"
    ],
    "filters": [],
    "includes": {}
  }
}